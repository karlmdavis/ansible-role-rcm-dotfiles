---

# Get rcm_user's home directory (portably!)
- name: Get Home Directory for RCM User
  shell: echo ~{{ rcm_user }}
  register: rcm_user_home_shell
  changed_when: false
- name: Calculate Home Directory for RCM User
  set_fact:
    rcm_user_home: "{{ rcm_user_home_shell.stdout | trim }}"

# Determine which installation and configuration mechanism to use.
- set_fact: rcm_install_tasks="{{ 'install_no_internet.yml' if rcm_install_mode == 'no_internet' else 'install_{0}.yml'.format(ansible_distribution) }}"
- include_tasks: "{{ rcm_install_tasks }}"

- name: Initialize Variable for Repo Cloning
  set_fact:
    repo_was_cloned: false

- include_tasks: clone_repo.yml
  with_items: "{{ rcm_repos }}"
  loop_control:
    loop_var: rcm_repo

- set_fact:
    rcup_args: "-x README.md -x LICENSE{{ ' -f' if rcm_replace_existing_files == true else '' }}{{ rcm_repos | map(attribute='dest') | map('regex_replace', '^(.*)$', ' -d \\1') | join('') }}"
- name: Run rcup to Deploy Dotfiles
  command: "{{ rcup_bin }} {{ rcup_args }}"
  when: repo_was_cloned == true
  become: true
  become_user: "{{ rcm_user }}"
